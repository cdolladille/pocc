[{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"create-and-use-a-data-frame","dir":"Articles","previous_headings":"","what":"Create and use a data.frame","title":"forest","text":"data.frame can used directly function.  , prefer use csv export, also possible.","code":"df <-    dplyr::tibble(      var = c(\"drug1\", \"drug2\", \"header\", \"drug3\"),      e1 = c(1.2, 0.8, NA, 5.0),      e1_lci = c(0.9, 0.7, NA, 2.3),      e1_uci = c(1.5, 0.9, NA, 7.8),      col1 = vigicaen::cff(e1,                          low_ci = e1_lci,                          up_ci = e1_uci,                          method = \"num_ci\",                          dig = 1),     e1_size = c(1, 10, NA, 3),     e2_size = c(10, 1, NA, 3),      color = ifelse(e1_lci > 1, \"green\", \"red\"),      is_header = ifelse(        is.na(e1),        2,        1),      e2 = c(0.9, 0.5, NA, 0.8),      e2_lci = c(0.8, 0.2, NA, 0.2),      e2_uci = c(1.0, 0.8, NA, 1.4),      e2_color = ifelse(e2_uci < 1, \"blue\", \"black\"),      tiles_guide = c(1, 0, 0, 1)    ) forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),    est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. dir <- tempdir()  write.csv2(df, paste0(dir, \"/\", \"test_df_for_forest_charles.csv\"),             row.names = FALSE)   forest_charles(    path_data = paste0(dir, \"/\", \"test_df_for_forest_charles.csv\"),    cols = \"var\",    cols_pos = c(1),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"required-arguments","dir":"Articles","previous_headings":"","what":"Required arguments","title":"forest","text":"required arguments: cols cols_pos est_1, est_1_low_ci, est_1_up_ci","code":""},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"overall-plot-limits","dir":"Articles","previous_headings":"","what":"Overall plot limits","title":"forest","text":"overall plot limits can extended plot_lims. wider overall plot result smallest forest plot.","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),    est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",    plot_lims = c(0, 50)  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"graphic-position","dir":"Articles","previous_headings":"","what":"Graphic position","title":"forest","text":"Graphic position controlled argument graphic1distance.  graphic1distance always smaller max(plot_lims).","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),    est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",    graphic1distance = 10  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"export-the-plot-to-vizualize-definitive-ratios","dir":"Articles","previous_headings":"","what":"Export the plot to vizualize definitive ratios","title":"forest","text":"always difference see R viewer exported figure. recommend save forest plot early development, sure final figure keep desire ratios plots, text, etc. best way save pdf file view Google Chrome (’s specific reason choosing Chrome : doesn’t deny R access plot).","code":"g1 <-   forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),    est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",    graphic1distance = 10  )  ggsave(filename = \"a_fine_place\", plot = g1,        width = 4,        height = 4 )"},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"hjust-of-cols","dir":"Articles","previous_headings":"","what":"hjust of cols","title":"forest","text":"Cols justification can changed cols_hjust: cols_hjust = 0 left justified (“Text ”) cols_hjust = 0.5 centered (” Text middle “) cols_hjust = 1 right justified (” Text ”)","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),    cols_hjust = 0,     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"box-color","dir":"Articles","previous_headings":"","what":"Box color","title":"forest","text":"Argument est_1_color name column data.frame.","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),    cols_hjust = 0,     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",        est_1_color = \"color\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"box-size","dir":"Articles","previous_headings":"","what":"Box size","title":"forest","text":"Box size can changed data.frame numeric column.  Box size capped size 1 size 3, can change limits argument size_range.","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",     est_1_size = \"e1_size\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",     est_1_size = \"e1_size\",    size_range = c(1, 5)  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"names-of-plotted-columns","dir":"Articles","previous_headings":"","what":"Names of plotted columns","title":"forest","text":"Argument cols_name let customize headers plotted columns.","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_name = \"Nice new name\",    cols_pos = c(2),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"plot-multiple-columns","dir":"Articles","previous_headings":"","what":"Plot multiple columns","title":"forest","text":"can display many columns want cols. Just remember set cols_pos.","code":"forest_charles(  path_data = df,  cols = c(\"var\", \"col1\"),  cols_pos = c(1, 5),   est_1 = \"e1\",  est_1_low_ci = \"e1_lci\",  est_1_up_ci = \"e1_uci\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_text()`)."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"limits-of-forest-plot","dir":"Articles","previous_headings":"","what":"Limits of forest plot","title":"forest","text":"Limits forest plot dependent ticks.  , can see one values est_1_low_ci est_1_up_ci larger max(ticks) (lower min(ticks)), cut arrow displayed. est_1 ticks, plotted","code":"forest_charles(  path_data = df,  cols = c(\"var\"),  cols_pos = c(1),   est_1 = \"e1\",  est_1_low_ci = \"e1_lci\",  est_1_up_ci = \"e1_uci\",  ticks = c(0.1, 0.5, 1, 2, 5, 6)  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. forest_charles(  path_data = df,  cols = c(\"var\"),  cols_pos = c(1),   est_1 = \"e1\",  est_1_low_ci = \"e1_lci\",  est_1_up_ci = \"e1_uci\",  ticks = c(0.1, 0.5, 1, 2, 4)   ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"plot-2-graphics","dir":"Articles","previous_headings":"","what":"Plot 2 graphics","title":"forest","text":"can supply data second graphic. graphic2distance parameter.  Size color 2nd graphic independent first graphic.","code":"forest_charles(  path_data = df,  cols = c(\"var\"),  cols_pos = c(1),   est_1 = \"e1\",  est_1_low_ci = \"e1_lci\",  est_1_up_ci = \"e1_uci\",  graphic1distance = 10,   est_2 = \"e2\",  est_2_low_ci = \"e2_lci\",  est_2_up_ci = \"e2_uci\",  graphic2distance = 20  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. forest_charles(  path_data = df,  cols = c(\"var\"),  cols_pos = c(1),   est_1 = \"e1\",  est_1_low_ci = \"e1_lci\",  est_1_up_ci = \"e1_uci\",    est_1_color = \"color\",  est_1_size = \"e1_size\",    graphic1distance = 10,   est_2 = \"e2\",  est_2_low_ci = \"e2_lci\",  est_2_up_ci = \"e2_uci\",    est_2_color = \"e2_color\",  est_2_size = \"e2_size\",    graphic2distance = 20  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"columns-with-customized-font","dir":"Articles","previous_headings":"","what":"Columns with customized font","title":"forest","text":"lines can printed bold, italic. need provide column identifies desired font.","code":"forest_charles(    path_data = df,    cols = c(\"var\", \"col1\"),    cols_pos = c(1, 5),    cols_hjust = c(0.5, 0.5),    cols_custom = \"var\",    cols_custom_fontface = \"is_header\",     est_1_color = \"color\",     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",    graphic1distance = 10) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_text()`)."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"add-tiles","dir":"Articles","previous_headings":"","what":"Add tiles","title":"forest","text":"Use column 0 1. line 1 tile panel background boxes.  Arguments tiles_height, tiles_color control tiles (altogether).","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(2),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",     tiles = \"tiles_guide\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(2),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",     tiles = \"tiles_guide\",    tiles_height = 0.2,    tiles_color = \"cornflowerblue\"  ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"forest-plot-panel-background-color","dir":"Articles","previous_headings":"","what":"Forest plot panel background color","title":"forest","text":"alpha controller , panel behind plot. means shade box color.","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",     g1_panelcolor = \"cornflowerblue\"   ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/articles/forest.html","id":"change-box-shape","dir":"Articles","previous_headings":"","what":"Change box shape","title":"forest","text":"short reminder : 16 circle, 15 square. Others can found ggplot2 cheatsheet.","code":"forest_charles(    path_data = df,    cols = \"var\",    cols_pos = c(1),     est_1 = \"e1\",    est_1_low_ci = \"e1_lci\",    est_1_up_ci = \"e1_uci\",     box_shape = 15   ) #> Warning: The `margin` argument should be constructed using the #> `margin()` function. #> Warning in geom_segment(aes(x = 0, xend = 0, y = min(scaledata$HR) %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 0, xend = max(data1$order) + 0.5, y = mark_O_1 %+*% : All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row."},{"path":"https://cdolladille.github.io/pocc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Charles Dolladille. Author, maintainer. Universite de Caen Normandie. Copyright holder.           Caen, France Unite de pharmaco-epidemiologie. Copyright holder.           Service de pharmacologie, Centre Hospitalier Universitaire de Caen, Caen, France","code":""},{"path":"https://cdolladille.github.io/pocc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dolladille C (2025). pocc: Outils d'analyses en pharmacologie, Caen, Charles. R package version 0.1.0, https://cdolladille.github.io/pocc/.","code":"@Manual{,   title = {pocc: Outils d'analyses en pharmacologie, Caen, Charles},   author = {Charles Dolladille},   year = {2025},   note = {R package version 0.1.0},   url = {https://cdolladille.github.io/pocc/}, }"},{"path":"https://cdolladille.github.io/pocc/index.html","id":"pocc","dir":"","previous_headings":"","what":"Outils d'analyses en pharmacologie, Caen, Charles","title":"Outils d'analyses en pharmacologie, Caen, Charles","text":"Pharmacologie Outils Caen Charles Outils d’analyses en pharmacologie, Caen, Charles","code":""},{"path":"https://cdolladille.github.io/pocc/reference/describe_na_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore MAR hypothesis — describe_na_links","title":"Explore MAR hypothesis — describe_na_links","text":"Missing Random (MAR) mechanism missing data exploration, bivariate analyses.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/describe_na_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore MAR hypothesis — describe_na_links","text":"","code":"describe_na_links(var, var_list, df_md)"},{"path":"https://cdolladille.github.io/pocc/reference/describe_na_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore MAR hypothesis — describe_na_links","text":"var character vector, one variables missing data. var_list character vector, potential predictors .na(var), df_md data.frame, underlying (unimputed) data.frame","code":""},{"path":"https://cdolladille.github.io/pocc/reference/describe_na_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore MAR hypothesis — describe_na_links","text":"data.frame, one row per var, number associated variables Odds details.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/describe_na_links.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Explore MAR hypothesis — describe_na_links","text":"Exploration potential mechanism missingness mandatory performing missing data imputation. two acceptable settings Missing Random (MAR) mechanism Missing Completely Random (MCAR). MAR may assumed certain conditions. One missingness variables associated variables (aim reduce plausibility last mechanism, Missing Random). function performs bivariate analyses via glm, .na(var), var variable interest containing missing data, one explaining variables, var_list. function accepts one var evaluated, var argument.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/describe_na_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore MAR hypothesis — describe_na_links","text":"","code":"df_md <-   data.frame(     shuffle = rnorm(1000)   )  |>   dplyr::mutate(     v1 = c(rep(1, 300), rep(0, 700)),     v1 = c(rep(1, 250), rep(NA, 50), rep(0, 700)),     v2 = ifelse(shuffle < - 0.8, 1, 0),     v3 = c(rep(1, 200), rep(0, 70), rep(1, 30), rep(0, 700)),     across(c(v1, v2, v3), as.factor)   )  md_diag <-   describe_na_links(     var = \"v1\",     var_list = c(\"v3\"),     df_md = df_md   )"},{"path":"https://cdolladille.github.io/pocc/reference/extract_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract last modified date of file — extract_date","title":"Extract last modified date of file — extract_date","text":"Short-hand around file.info()","code":""},{"path":"https://cdolladille.github.io/pocc/reference/extract_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract last modified date of file — extract_date","text":"","code":"extract_date(path_file)"},{"path":"https://cdolladille.github.io/pocc/reference/extract_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract last modified date of file — extract_date","text":"path_file character string, path file.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/extract_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract last modified date of file — extract_date","text":"character string, last modified date file.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/extract_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract last modified date of file — extract_date","text":"function examines file located path_file returns last modified date (character string.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/extract_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract last modified date of file — extract_date","text":"","code":"tf <-   tempfile()   write.csv2(mtcars, file = tf)   extract_date(tf) #> [1] \"2025-09-19\"   file.remove(tf) #> [1] TRUE"},{"path":"https://cdolladille.github.io/pocc/reference/forest_charles.html","id":null,"dir":"Reference","previous_headings":"","what":"My costum forest plot function — forest_charles","title":"My costum forest plot function — forest_charles","text":"Check forest_charles vignette many showcase.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/forest_charles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My costum forest plot function — forest_charles","text":"","code":"forest_charles(   path_data,   cols,   cols_name = stringr::str_to_title(cols),   cols_pos,   cols_hjust = rep(0.5, each = length(cols)),   cols_custom = NULL,   cols_custom_fontface = NULL,   est_1,   est_1_low_ci,   est_1_up_ci,   est_1_color = NULL,   est_1_size = NULL,   est_2 = NULL,   est_2_low_ci = NULL,   est_2_up_ci = NULL,   est_2_color = NULL,   est_2_size = NULL,   blank_rows = 2,   title_size = 4,   data_size = 9,   axis_size = 6,   plot_lims = c(0, 30),   ticks = c(0.1, 0.5, 1, 2, 10),   log_scale = TRUE,   size_range = c(1, 3),   graph_width = 5,   graph_height = 3.5,   graphic1distance = 20,   g1_panelcolor = \"white\",   graphic2distance = NULL,   g2_panelcolor = \"white\",   keep_grid = FALSE,   tiles = NULL,   tiles_height = 0.5,   tiles_color = \"grey\",   box_shape = 16 )"},{"path":"https://cdolladille.github.io/pocc/reference/forest_charles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"My costum forest plot function — forest_charles","text":"path_data character string, path .csv data main plot cols character vector, columns printed cols_name character vector length length(cols), names printed ahead columns cols_pos numeric vector, (probably removed shiny app) graphic positions plot columns. Must length cols. cols_hjust numeric vector, hjust cols (length cols) cols_custom character vector, columns requiring special layout content. cols_custom_fontface character string, column numeric values 1 4, specifying fontface cols_custom. 1 plain, 2 bold, 3 italic, 4 bold italic. est_1 character string, column numeric values estimated effect plotted main plot. est_1_low_ci character string, columns numeric values confidence interval margins main plot. est_1_up_ci character string est_1_color character string, column used define box colors est_1_size character string, column used est_1 box size. est_2 character string, est_1, can NULL plot. est_2_low_ci character string, est_1 est_2_up_ci character string, est_1 est_2_color character string, est_1 est_2_size character string, est_1 blank_rows numeric, blank rows boxplot title_size numeric data_size numeric axis_size numeric plot_lims numeric vector length 2, overall plot limits (including space columns printing, see details) ticks numeric vector, plot ticks axis. log_scale logical, scale log-transformed? size_range numeric length 2, min max size box plots. graph_width numeric, output graphics dimensions graph_height numeric, output graphics dimensions graphic1distance numeric, main plot position g1_panelcolor character string, color graphic 1 panel graphic2distance numeric, second plot position g2_panelcolor character string, color graphic 2 panel keep_grid logical, want print underlying grid? Helps positionning columns tiles character string, column indicating lines need rectangle tiles_height numeric, half-height tiles. Defaults 0.5 tiles_color character string, color fill tiles box_shape numeric, shape boxes, see ggplot2 cheatsheet","code":""},{"path":"https://cdolladille.github.io/pocc/reference/forest_charles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"My costum forest plot function — forest_charles","text":"present one based ggplot2. Starts back scratch. provide single file data, even case want draw 2 plots. second file needed column name correspondence labels. Use plot_lims set overall plot limits, .e. including space printing cols. Use ticks set estimate plot limits (conditions use arrows outsider values). cols_custom can used want content columns customized (rows plain text, others bold, etc.). Many examples can found vignette.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/forest_charles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"My costum forest plot function — forest_charles","text":"","code":"df <-   dplyr::tibble(     var = c(\"drug1\", \"drug2\", \"header\", \"drug3\"),     e1 = c(1.2, 0.8, NA, 5.0),     e1_lci = c(0.9, 0.7, NA, 2.3),     e1_uci = c(1.5, 0.9, NA, 7.8),     col1 = vigicaen::cff(e1,                         low_ci = e1_lci,                         up_ci = e1_uci,                         method = \"num_ci\",                         dig = 1),    e1_size = c(1, 10, NA, 3),    e2_size = c(10, 1, NA, 3),     color = ifelse(e1_lci > 1, \"green\", \"red\"),     is_header = ifelse(       is.na(e1),       2,       1),     e2 = c(0.9, 0.5, NA, 0.8),     e2_lci = c(0.8, 0.2, NA, 0.2),     e2_uci = c(1.0, 0.8, NA, 1.4),     e2_color = ifelse(e2_uci < 1, \"blue\", \"black\"),     tiles_guide = c(1, 0, 0, 1)   )  # you can use a data.frame directly  forest_charles(   path_data = df,   cols = \"var\",   cols_pos = c(1),    est_1 = \"e1\",   est_1_low_ci = \"e1_lci\",   est_1_up_ci = \"e1_uci\"  ) #> Warning: The `margin` argument should be constructed using the `margin()` function. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.   # or use a csv file  dir <- tempdir() write.csv2(df, paste0(dir, \"/\", \"test_df_for_forest_charles.csv\"),            row.names = FALSE)   forest_charles(   path_data = paste0(dir, \"/\", \"test_df_for_forest_charles.csv\"),   cols = \"var\",   cols_pos = c(1),   cols_hjust = 0.5,    est_1 = \"e1\",   est_1_low_ci = \"e1_lci\",   est_1_up_ci = \"e1_uci\"  ) #> Warning: The `margin` argument should be constructed using the `margin()` function. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.   # Plot multiple columns  forest_charles( path_data = df, cols = c(\"var\", \"col1\"), cols_pos = c(1, 5), cols_hjust = c(0.5, 0.5),  est_1 = \"e1\", est_1_low_ci = \"e1_lci\", est_1_up_ci = \"e1_uci\" ) #> Warning: The `margin` argument should be constructed using the `margin()` function. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_text()`).    # Plot 2 graphics  forest_charles(   path_data = df,   cols = c(\"var\"),   cols_pos = c(1),    est_1 = \"e1\",   est_1_low_ci = \"e1_lci\",   est_1_up_ci = \"e1_uci\",   graphic1distance = 10,    est_2 = \"e2\",   est_2_low_ci = \"e2_lci\",   est_2_up_ci = \"e2_uci\",   graphic2distance = 15 ) #> Warning: The `margin` argument should be constructed using the `margin()` function. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.   # Those 2 graphics have separate parameters  forest_charles(   path_data = df,   cols = c(\"var\", \"col1\"),   cols_pos = c(1, 5),   cols_hjust = c(0.5, 0.5),    est_1_color = \"color\",   est_1_size = \"e1_size\",   est_1 = \"e1\",   est_1_low_ci = \"e1_lci\",   est_1_up_ci = \"e1_uci\",   graphic1distance = 10,    est_2_color = \"e2_color\",   est_2 = \"e2\",   est_2_low_ci = \"e2_lci\",   est_2_up_ci = \"e2_uci\",   est_2_size = \"e2_size\",   graphic2distance = 15 ) #> Warning: The `margin` argument should be constructed using the `margin()` function. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 4 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_text()`)."},{"path":"https://cdolladille.github.io/pocc/reference/imp_eff.html","id":null,"dir":"Reference","previous_headings":"","what":"Average effectives after multiple imputation — imp_eff","title":"Average effectives after multiple imputation — imp_eff","text":"function provides averaged effectives categorical variables missing data imputation.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/imp_eff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average effectives after multiple imputation — imp_eff","text":"","code":"imp_eff(var, imp_data)"},{"path":"https://cdolladille.github.io/pocc/reference/imp_eff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average effectives after multiple imputation — imp_eff","text":"var character vector, variable count effectives . imp_data long format data.table imputed datasets.","code":""},{"path":"https://cdolladille.github.io/pocc/reference/imp_eff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Average effectives after multiple imputation — imp_eff","text":"need provide imputed datasets long format data.table, containing initial dataset. example, mice package, imp_data <- mice::complete(imp, \"long\", include = FALSE).","code":""},{"path":"https://cdolladille.github.io/pocc/reference/imp_eff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average effectives after multiple imputation — imp_eff","text":"","code":"## not yet ready"},{"path":[]},{"path":"https://cdolladille.github.io/pocc/news/index.html","id":"setting-the-stage-0-1-0","dir":"Changelog","previous_headings":"","what":"Setting the stage","title":"pocc 0.1.0","text":"Transfer charles.","code":""},{"path":"https://cdolladille.github.io/pocc/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"pocc 0.1.0","text":"forest_charles() now works even estimates plot.","code":""}]
